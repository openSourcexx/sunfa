package demo.suanfa;

/*
I
假设有一个数组，它的第i个元素是一支给定的股票在第i天的价格。
如果你最多只允许完成一次交易(例如,一次买卖股票),设计一个算法来找出最大利润。
II
假设有一个数组，它的第i个元素是一个给定的股票在第i天的价格。
设计一个算法来找到最大的利润。你可以完成尽可能多的交易(多次买卖股票)。
然而,你不能同时参与多个交易(你必须在再次购买前出售股票)。
III
假设你有一个数组，它的第i个元素是一支给定的股票在第i天的价格。
设计一个算法来找到最大的利润。你最多可以完成两笔交易。
样例
给出一个样例数组 [4,4,6,1,1,4,2,5], 返回 6 */
public class MaxProfit {
    public static void main(String args[]) {
        int[] a = {4, 4, 6, 1, 1, 4, 2, 5};
        int sum = 0;
        for (int i = 1; i < a.length; i++) {
            if (a[i] > a[i - 1]) {//ֻ只有有钱赚就加
                sum += a[i] - a[i - 1];
            }
        }
        System.out.println(sum);
    }

}
